<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zhouqifun.mapper.GoodsDao">
    <resultMap id="GoodsMap" type="Goods">
        <id property="g_id" column="g_id"></id>
        <result property="g_name" column="g_name"></result>
        <result property="g_desc" column="g_desc"></result>
        <result property="g_place" column="g_place"></result>
        <result property="g_price" column="g_price"></result>
        <result property="g_bargain" column="g_bargain"></result>
        <result property="g_phonenum" column="g_phonenum"></result>
        <result property="g_qq" column="g_qq"></result>
        <result property="g_showornot" column="g_showornot"></result>
        <result property="g_rejectreason" column="g_rejectreason"></result>
        <result property="g_createdTime" column="g_createdtime"></result>
        <result property="g_picture1" column="g_picture1"></result>
        <result property="g_picture2" column="g_picture2"></result>
        <result property="g_picture3" column="g_picture3"></result>
        <result property="g_picture4" column="g_picture4"></result>
        <result property="brownTimes" column="brownTimes"></result>
        <association property="account" javaType="Account">
            <id property="a_id" column="a_id"/>
            <result property="nickname" column="a_nickname"/>
            <result property="email" column="a_email"/>
            <result property="password" column="a_password"/>
        </association>
        <association property="school" javaType="School">
            <id property="s_id" column="s_id"></id>
            <result property="s_name" column="s_name"></result>
        </association>
        <association property="type" javaType="Type">
            <id property="t_id" column="t_id"></id>
            <result property="t_typename" column="t_typename"></result>
            <result property="t_typeimgforpc" column="t_typeimgforpc"></result>
            <result property="t_typedesc" column="t_typedesc"></result>
        </association>
    </resultMap>

    <insert id="insertForGoods" parameterType="Goods">
        INSERT
        INTO t_goods
        (g_id,g_name,g_desc,g_place,g_price,g_bargain,g_phonenum,g_qq,g_picture1,
         g_picture2,g_picture3,g_picture4,account_id,school_id,type_id,brownTimes)
        value
        (NULL,#{g_name},#{g_desc},#{g_place},#{g_price},#{g_bargain},#{g_phonenum},#{g_qq},#{g_picture1},
         #{g_picture2},#{g_picture3},#{g_picture4},#{account.a_id},#{school.s_id},#{type.t_id},0)
    </insert>


    <select id="getForMyGoods" resultMap="GoodsMap">
        SELECT g.g_id
        from t_goods as g
        left join t_account as a
        on g.account_id = a.a_id
        where a.a_id = #{a_id}
    </select>

    <select id="getForGoodsAtSchool" resultMap="GoodsMap">
        SELECT g.g_id
        FROM t_goods as g,t_school as s
        WHERE g.school_id = s.s_id and s.s_id = #{s_id} and g_showornot = 1
        limit #{currentPageGoodsSize},20
    </select>

    <select id="getGoodsPreview" resultMap="GoodsMap">
        SELECT g.g_id,g.g_name,g.g_picture1,g.g_price,g.g_place,g.g_bargain,g.g_desc,g.g_showornot,g.g_rejectreason,s.s_id
        FROM t_goods as g left join t_school as s
        on g.school_id = s.s_id
        WHERE g.g_id = #{g_id} and g_showornot = 1
    </select>

    <select id="getMyGoodsPreview" resultMap="GoodsMap">
        SELECT g.g_id,g.g_name,g.g_picture1,g.g_price,g.g_place,g.g_bargain,g.g_desc,g.g_showornot,g.g_rejectreason,s.s_id
        FROM t_goods as g left join t_school as s
        on g.school_id = s.s_id
        WHERE g.g_id = #{g_id}
    </select>

    <select id="getForGoodsById" resultMap="GoodsMap">
        SELECT
        g.g_id,g.g_name,g.g_desc,g.g_place,g.g_price,g.g_showornot,g.g_createdtime,
        g.g_bargain,g.g_picture1,g.g_picture2,g.g_picture3,g.g_picture4,
        g.g_phonenum,g.g_qq,g.g_createdtime,brownTimes,a.a_id,a.a_nickname,s.s_name
        FROM (t_goods as g left join t_account as a on g.account_id = a.a_id)
        left join t_school as s
        on g.school_id = s.s_id
        WHERE g.g_id = #{g_id} and g.g_showornot = 1
    </select>

    <select id="getForUpdateGoods" resultMap="GoodsMap">
       SELECT
        g.g_id,g.g_name,g.g_desc,g.g_place,g.g_price,g.g_showornot,g.g_createdtime,
        g.g_bargain,g.g_picture1,g.g_picture2,g.g_picture3,g.g_picture4,
        g.g_phonenum,g.g_qq,a.a_id,t.t_id,s.s_id
        FROM (t_goods as g left join t_account as a on g.account_id = a.a_id left join t_type as t on g.type_id = t.t_id)
        left join t_school as s
        on g.school_id = s.s_id
        WHERE  (g.g_showornot = 1 or g.g_showornot = -1) and g.g_id = #{g_id}
    </select>

    <update id="updateForGoods" parameterType="Goods">
        UPDATE t_goods
        SET g_name = #{g_name},
        g_desc = #{g_desc},
        g_place = #{g_place},
        g_price = #{g_price},
        g_bargain = #{g_bargain},
        g_phonenum = #{g_phonenum},
        g_qq=#{g_qq},
        <if test="g_picture1 != null and g_picture1 != '' ">
            g_picture1 = #{g_picture1},
        </if>
        <if test="g_picture2 != null and g_picture2 != '' ">
            g_picture2 = #{g_picture2},
        </if>
        <if test="g_picture3 != null and g_picture3 != '' ">
            g_picture3 = #{g_picture3},
        </if>
        <if test="g_picture4 != null and g_picture4 != '' ">
            g_picture4 = #{g_picture4},
        </if>
        type_id = #{type.t_id},
        g_showornot = 0,
        g_rejectreason = NULL ,
        g_createdtime = now()
        WHERE g_id = #{g_id}
    </update>


    <update id="updateForOffGoods">
        UPDATE t_goods
        set g_showornot = 2
        where g_id = #{g_id}
    </update>

    <update id="updateForOnGoods">
        UPDATE t_goods
        set g_showornot = 1
        where g_id = #{g_id}
    </update>

    <update id="updateForAlreadySell">
        UPDATE t_goods
        SET g_showornot = 3
        where g_id = #{g_id}
    </update>

    <select id="getForGoodsInThisType" resultMap="GoodsMap">
        SELECT g.g_id,g.g_name,g.g_picture1,g.g_price,g.g_place,g.g_bargain,g.school_id
        FROM t_goods as g
        left join t_type as t
        on g.type_id = t.t_id
        where t.t_id = #{t_id}  and g.school_id = #{s_id} and g.g_showornot = 1
    </select>


    <select id="getForAllGoodsInThisType" resultMap="GoodsMap">
        SELECT g.g_id
        FROM (t_goods as g left join t_type as t on g.type_id = t.t_id)
        left join t_school as s
        on g.school_id = s.s_id
        where t.t_id = #{t_id} and g.g_showornot = 1
    </select>

    <select id="getForOtherUserGoods" resultMap="GoodsMap">
        select g.g_id,g.g_picture1,g.g_name,g.g_desc,g.g_place,g.g_price
        from t_goods as g
        left join t_account as a
        on g.account_id = a.a_id
        where a.a_id = #{a_id} and g.g_showornot = 1
    </select>

    <select id="countForGoods" resultType="int">
        select COUNT(*)
        from t_goods as g
        where g.type_id = #{t_id} and g.g_showornot = 1
    </select>

    <update id="addBrownTimes">
        UPDATE t_goods
        SET brownTimes = brownTimes + 1
        WHERE g_id = #{g_id}
    </update>

    <select id="getRecommentGoods" resultMap="GoodsMap">
        select g.g_name,g.g_id,g.brownTimes,g.g_picture1
        from t_goods as g
        where g.school_id = 14
        order by g.brownTimes desc
        limit 0,5
    </select>

</mapper>
